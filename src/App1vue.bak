<template>
  <!-- <sidenav
    :custom_class="this.$store.state.mcolor"
    :class="[
      this.$store.state.isTransparent,
      this.$store.state.isRTL ? 'fixed-end' : 'fixed-start',
    ]"
    v-if="this.$store.state.showSidenav"
  /> -->
    <sidenav
    :custom_class="mcolor"
    :class="[
      true,
      'fixed-start',
    ]"
    v-if="true"
  />
  <main
    class="main-content position-relative max-height-vh-100 h-100 border-radius-lg"
    :style="false ? 'overflow-x: hidden' : ''"
  >
    <!-- nav -->
    <navbar
      :class="[navClasses]"
      :textWhite="false ? 'text-white opacity-8' : ''"
      :minNav="navbarMinimize"
      v-if="true"
    />
    <router-view />
    <app-footer v-show="true" />
    <configurator
      :toggle="toggleConfigurator"
      :class="[
        false ? 'show' : '',
        false ? 'd-none' : '',
      ]"
    />
  </main>
</template>
<script>
import Sidenav from "./examples/Sidenav";
import Configurator from "./examples/Configurator.vue";
import Navbar from "./examples/Navbars/Navbar.vue";
import AppFooter from "./examples/Footer.vue";
// import { mapMutations } from "vuex";

export default {
  name: "App",
  components: {
    Sidenav,
    Configurator,
    Navbar,
    AppFooter,
  },
  // methods: {
  //   ...mapMutations(["toggleConfigurator", "navbarMinimize"]),
  // },
  computed: {
    navClasses() {
      return {
        "position-sticky blur shadow-blur mt-4 left-auto top-1 z-index-sticky": false,
        "position-absolute px-4 mx-0 w-100 z-index-2": false,
        "px-0 mx-4 mt-4": !true,
      };
    },
  },
  methods: {

     toggleConfigurator(state) {
      state.showConfig = !state.showConfig;
    },
    navbarMinimize(state) {
      const sidenav_show = document.querySelector(".g-sidenav-show");
      if (sidenav_show.classList.contains("g-sidenav-hidden")) {
        sidenav_show.classList.remove("g-sidenav-hidden");
        sidenav_show.classList.add("g-sidenav-pinned");
        state.isPinned = true;
      } else {
        sidenav_show.classList.add("g-sidenav-hidden");
        sidenav_show.classList.remove("g-sidenav-pinned");
        state.isPinned = false;
      }
    },
  },
  beforeMount() {
    // this.$store.state.isTransparent = "bg-transparent";
  },
};
</script>
  